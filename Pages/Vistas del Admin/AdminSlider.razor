@page  "/admin/slider"
@attribute [Authorize(Roles = "Administrador")]
@inject IServicioSlider Slider
<h3>Administrar slider</h3>
<center>
    <MudCarousel Style="height:200px;" ShowArrows="@arrows" ShowDelimiters="@delimiters" AutoCycle="@autocycle" TData="object">
        @foreach (PaginasSlider item in Paginas)
        {
        <MudCarouselItem Transition="transition" Color="@Color.Primary">
            <MudCard>
                <MudCardMedia Image=@item.UrlImagen Height="250" />

            </MudCard>
        </MudCarouselItem>
        }
       
    </MudCarousel>

    @foreach (PaginasSlider item in Paginas)
    {
<MudCard>
    <MudTextField Label="URL de la imagen en internet" Class="mt-3"
                  @bind-Value="item.UrlImagen" />
    <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Save" Color="Color.Info" OnClick="(()=> Actualizar(item))">Actualizar</MudButton>

</MudCard>
    }
</center>

@code{
    PaginasSlider Sli = new PaginasSlider();
    List<PaginasSlider> Paginas;
    private bool arrows = true;
    private bool delimiters = true;
    private bool autocycle = true;
    private Transition transition = Transition.Slide;

    protected override async Task OnInitializedAsync()
    {
        Paginas = await Slider.Get();
    }

    public async Task Actualizar(PaginasSlider slider)
    {
        await Slider.Update(slider);
        Paginas = await Slider.Get();
    }
}